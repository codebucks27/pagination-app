{"ast":null,"code":"var _jsxFileName = \"D:\\\\Open source\\\\pagination-app\\\\src\\\\components\\\\Animals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { usePaginatedQuery, useQuery } from 'react-query';\nimport Animal from './Animal';\n\nconst fetchAnimals = async (key, page) => {\n  const headers = {\n    'app-id': '628cfd76d7c13ab387fde193'\n  }; // GET request to get data\n\n  const res = await fetch(`https://dummyapi.io/data/v1/post?limit=10&page=${page}`, {\n    headers\n  });\n  return res.json();\n};\n\nconst Animals = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n  const {\n    resolvedData,\n    latestData,\n    status\n  } = usePaginatedQuery(['animals', page], fetchAnimals, {\n    keepPreviousData: true\n  });\n  console.log(resolvedData, latestData, status);\n  useEffect(() => {\n    if (latestData !== undefined) {\n      let noOfPages = Math.ceil(latestData.total / latestData.limit);\n      setTotalPage(noOfPages);\n    }\n  }, [latestData]);\n\n  let handleNext = () => {\n    let newPage = page + 1;\n    setPage(newPage); // setPage(old => (!latestData || !latestData.next ? old : old + 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, status === 'loading' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Loading data\"), status === 'error' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Error fetching data\"), status === 'success' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Animals\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-2xl mx-auto py-16 sm:py-24 lg:py-32 lg:max-w-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-extrabold text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"Collections\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-6 space-y-12 lg:space-y-0 lg:grid lg:grid-cols-3 lg:gap-x-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, resolvedData.data.map(animal => /*#__PURE__*/React.createElement(\"span\", {\n    key: animal.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 57\n    }\n  }, animal.owner.firstName))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: () => setPage(old => Math.max(old - 1, 1)),\n    disabled: page === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Previous Page\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, page), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: () => handleNext(),\n    disabled: totalPage === page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Next page\"))))));\n};\n\n_s(Animals, \"kvCNylcQHwi85ebUHwPqqwWsXtE=\", false, function () {\n  return [usePaginatedQuery];\n});\n\n_c = Animals;\nexport default Animals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Animals\");","map":{"version":3,"names":["React","useState","useEffect","usePaginatedQuery","useQuery","Animal","fetchAnimals","key","page","headers","res","fetch","json","Animals","setPage","totalPage","setTotalPage","resolvedData","latestData","status","keepPreviousData","console","log","undefined","noOfPages","Math","ceil","total","limit","handleNext","newPage","data","map","animal","id","owner","firstName","old","max"],"sources":["D:/Open source/pagination-app/src/components/Animals.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { usePaginatedQuery, useQuery } from 'react-query';\r\nimport Animal from './Animal';\r\n\r\nconst fetchAnimals = async (key, page) => {\r\n  const headers = { 'app-id': '628cfd76d7c13ab387fde193' }\r\n  // GET request to get data\r\n  const res = await fetch(`https://dummyapi.io/data/v1/post?limit=10&page=${page}`, { headers } );\r\n    return res.json();\r\n}\r\n\r\n\r\nconst Animals = () => {\r\n  const [ page, setPage ] = useState(1);\r\n  const [ totalPage, setTotalPage ] = useState(1);\r\n\r\n\r\n\r\n  \r\n\r\n  const { \r\n    resolvedData, \r\n    latestData, \r\n    status \r\n  } = usePaginatedQuery(['animals', page], fetchAnimals, { keepPreviousData : true });\r\n  console.log(resolvedData, \r\n    latestData, \r\n    status);\r\n\r\n    useEffect(() => {\r\n\r\n      if(latestData !== undefined){\r\n       \r\n          let noOfPages = Math.ceil(latestData.total/latestData.limit);\r\n        setTotalPage(noOfPages)\r\n      }\r\n     \r\n    }, [latestData]);\r\n\r\n  let handleNext = () => {\r\n    let newPage = page + 1;\r\n    setPage(newPage);\r\n    // setPage(old => (!latestData || !latestData.next ? old : old + 1));\r\n  }\r\n  return (\r\n    <div>\r\n    \r\n\r\n      {status === 'loading' && (\r\n        <div>Loading data</div>\r\n      )}\r\n\r\n      {status === 'error' && (\r\n        <div>Error fetching data</div>\r\n      )}\r\n\r\n      {status === 'success' && (\r\n        <>\r\n      \r\n          <div className=\"bg-gray-100\">\r\n            <h2>Animals</h2>\r\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"max-w-2xl mx-auto py-16 sm:py-24 lg:py-32 lg:max-w-none\">\r\n                  <h2 className=\"text-2xl font-extrabold text-gray-900\">Collections</h2>\r\n                  <div className=\"mt-6 space-y-12 lg:space-y-0 lg:grid lg:grid-cols-3 lg:gap-x-6\">\r\n                      {/* { resolvedData.data.map(animal => <Animal key={animal} animal={animal} /> ) } */}\r\n                      { resolvedData.data.map(animal => <span key={animal.id}>{animal.owner.firstName}</span> ) }\r\n\r\n                  </div>\r\n                  <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded' \r\n            onClick={() => setPage(old => Math.max(old - 1, 1))} \r\n            disabled={page === 1}>\r\n            Previous Page\r\n          </button>\r\n          <span>{ page }</span>\r\n          <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'\r\n            onClick={() => handleNext()} \r\n           disabled={totalPage === page}\r\n            >\r\n            Next page\r\n          </button>\r\n                </div>\r\n              </div>\r\n            </div>          \r\n        </>\r\n      )} \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Animals;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,aAA5C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,YAAY,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;EACxC,MAAMC,OAAO,GAAG;IAAE,UAAU;EAAZ,CAAhB,CADwC,CAExC;;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kDAAiDH,IAAK,EAAxD,EAA2D;IAAEC;EAAF,CAA3D,CAAvB;EACE,OAAOC,GAAG,CAACE,IAAJ,EAAP;AACH,CALD;;AAQA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAAEL,IAAF,EAAQM,OAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAAEc,SAAF,EAAaC,YAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;EAMA,MAAM;IACJgB,YADI;IAEJC,UAFI;IAGJC;EAHI,IAIFhB,iBAAiB,CAAC,CAAC,SAAD,EAAYK,IAAZ,CAAD,EAAoBF,YAApB,EAAkC;IAAEc,gBAAgB,EAAG;EAArB,CAAlC,CAJrB;EAKAC,OAAO,CAACC,GAAR,CAAYL,YAAZ,EACEC,UADF,EAEEC,MAFF;EAIEjB,SAAS,CAAC,MAAM;IAEd,IAAGgB,UAAU,KAAKK,SAAlB,EAA4B;MAExB,IAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUR,UAAU,CAACS,KAAX,GAAiBT,UAAU,CAACU,KAAtC,CAAhB;MACFZ,YAAY,CAACQ,SAAD,CAAZ;IACD;EAEF,CARQ,EAQN,CAACN,UAAD,CARM,CAAT;;EAUF,IAAIW,UAAU,GAAG,MAAM;IACrB,IAAIC,OAAO,GAAGtB,IAAI,GAAG,CAArB;IACAM,OAAO,CAACgB,OAAD,CAAP,CAFqB,CAGrB;EACD,CAJD;;EAKA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGGX,MAAM,KAAK,SAAX,iBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAJJ,EAOGA,MAAM,KAAK,OAAX,iBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBARJ,EAWGA,MAAM,KAAK,SAAX,iBACC,uDAEE;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADF,eAEI;IAAK,SAAS,EAAC,wCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,yDAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,uCAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADF,eAEE;IAAK,SAAS,EAAC,gEAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEMF,YAAY,CAACc,IAAb,CAAkBC,GAAlB,CAAsBC,MAAM,iBAAI;IAAM,GAAG,EAAEA,MAAM,CAACC,EAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAuBD,MAAM,CAACE,KAAP,CAAaC,SAApC,CAAhC,CAFN,CAFF,eAOE;IAAQ,SAAS,EAAC,sEAAlB;IACN,OAAO,EAAE,MAAMtB,OAAO,CAACuB,GAAG,IAAIZ,IAAI,CAACa,GAAL,CAASD,GAAG,GAAG,CAAf,EAAkB,CAAlB,CAAR,CADhB;IAEN,QAAQ,EAAE7B,IAAI,KAAK,CAFb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAPF,eAYN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQA,IAAR,CAZM,eAaN;IAAQ,SAAS,EAAC,sEAAlB;IACE,OAAO,EAAE,MAAMqB,UAAU,EAD3B;IAEC,QAAQ,EAAEd,SAAS,KAAKP,IAFzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAbM,CADF,CAFJ,CAFF,CAZJ,CADF;AA4CD,CA5ED;;GAAMK,O;UAYAV,iB;;;KAZAU,O;AA8EN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}