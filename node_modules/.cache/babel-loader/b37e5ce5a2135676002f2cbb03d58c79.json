{"ast":null,"code":"var _jsxFileName = \"D:\\\\Open source\\\\pagination-app\\\\src\\\\components\\\\paginationComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst renderData = data => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, data.map((todo, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 16\n      }\n    }, todo.title);\n  }));\n};\n\nfunction PaginationComponent() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [currentPage, setcurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(5);\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: handleClick,\n        className: currentPage == number ? \"active\" : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, number);\n    } else {\n      return null;\n    }\n  });\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(json => setData(json));\n  }, []);\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/React.createElement(\"li\", {\n      onClick: handleNextbtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }\n    }, \" \\u2026 \");\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/React.createElement(\"li\", {\n      onClick: handlePrevbtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }, \" \\u2026 \");\n  }\n\n  const handleLoadMore = () => {\n    setitemsPerPage(itemsPerPage + 5);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderData(currentItems), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pageNumbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrevbtn,\n    disabled: currentPage == pages[0] ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Prev\")), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextbtn,\n    disabled: currentPage == pages[pages.length - 1] ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n}\n\n_s(PaginationComponent, \"B7okE8m9owpYHi5bQ1nRReL4YyM=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"names":["React","useEffect","useState","renderData","data","map","todo","index","title","PaginationComponent","setData","currentPage","setcurrentPage","itemsPerPage","setitemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","number","fetch","then","response","json","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","handleLoadMore"],"sources":["D:/Open source/pagination-app/src/components/paginationComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst renderData = (data) => {\r\n  return (\r\n    <ul>\r\n      {data.map((todo, index) => {\r\n        return <li key={index}>{todo.title}</li>;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nfunction PaginationComponent() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [itemsPerPage, setitemsPerPage] = useState(5);\r\n\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  const handleClick = (event) => {\r\n    setcurrentPage(Number(event.target.id));\r\n  };\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}\r\n          className={currentPage == number ? \"active\" : null}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json));\r\n  }, []);\r\n\r\n  const handleNextbtn = () => {\r\n    setcurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setcurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    setitemsPerPage(itemsPerPage + 5);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderData(currentItems)}\r\n      <ul className=\"pageNumbers\">\r\n        <li>\r\n          <button\r\n            onClick={handlePrevbtn}\r\n            disabled={currentPage == pages[0] ? true : false}\r\n          >\r\n            Prev\r\n          </button>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n\r\n        <li>\r\n          <button\r\n            onClick={handleNextbtn}\r\n            disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}