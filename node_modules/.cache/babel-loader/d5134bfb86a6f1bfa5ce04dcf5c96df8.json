{"ast":null,"code":"var _jsxFileName = \"D:\\\\Open source\\\\pagination-app\\\\src\\\\components\\\\Animals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { usePaginatedQuery, useQuery } from 'react-query';\nimport Animal from './Animal';\n\nconst fetchAnimals = async (key, page) => {\n  const headers = {\n    'app-id': '628cfd76d7c13ab387fde193'\n  }; // GET request to get data\n\n  const res = await fetch(`https://dummyapi.io/data/v1/post?limit=10&page=${page}`, {\n    headers\n  });\n  return res.json();\n};\n\nconst Animals = () => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n  const [pages, setPages] = useState([]);\n  const {\n    resolvedData,\n    latestData,\n    status\n  } = usePaginatedQuery(['animals', currentPage], fetchAnimals);\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(10);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = () => {\n    let newPage = currentPage + 1;\n    setCurrentPage(newPage);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: () => handleClick(),\n        className: currentPage == number ? \"active\" : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, number);\n    } else {\n      return null;\n    }\n  });\n  useEffect(() => {\n    let arr = [];\n\n    if (latestData !== undefined) {\n      let noOfPages = Math.ceil(latestData.total / latestData.limit);\n      setTotalPage(noOfPages);\n      setmaxPageNumberLimit(latestData.limit);\n\n      for (let i = 1; i <= noOfPages; i++) {\n        arr.push(i);\n      }\n\n      setPages(arr);\n    }\n  }, [latestData]);\n\n  let handleNext = () => {\n    let newPage = currentPage + 1;\n    setCurrentPage(newPage); // setPage(old => (!latestData || !latestData.next ? old : old + 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, status === 'loading' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Loading data\"), status === 'error' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Error fetching data\"), status === 'success' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Animals\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-2xl mx-auto py-16 sm:py-24 lg:py-32 lg:max-w-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-extrabold text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, \"Collections\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-6 space-y-12 lg:space-y-0 lg:grid lg:grid-cols-3 lg:gap-x-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, resolvedData.data.map(animal => /*#__PURE__*/React.createElement(\"span\", {\n    key: animal.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 57\n    }\n  }, animal.owner.firstName))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: () => setCurrentPage(old => Math.max(old - 1, 1)),\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \"Previous Page\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, renderPageNumbers), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n    onClick: () => handleNext(),\n    disabled: totalPage === currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Next page\"))))));\n};\n\n_s(Animals, \"w0aRnlAueeLtAt+uj/6o1VafM6Y=\", false, function () {\n  return [usePaginatedQuery];\n});\n\n_c = Animals;\nexport default Animals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Animals\");","map":{"version":3,"names":["React","useState","useEffect","usePaginatedQuery","useQuery","Animal","fetchAnimals","key","page","headers","res","fetch","json","Animals","currentPage","setCurrentPage","totalPage","setTotalPage","pages","setPages","resolvedData","latestData","status","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","newPage","renderPageNumbers","map","number","arr","undefined","noOfPages","Math","ceil","total","limit","i","push","handleNext","data","animal","id","owner","firstName","old","max"],"sources":["D:/Open source/pagination-app/src/components/Animals.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { usePaginatedQuery, useQuery } from 'react-query';\r\nimport Animal from './Animal';\r\n\r\nconst fetchAnimals = async (key, page) => {\r\n  const headers = { 'app-id': '628cfd76d7c13ab387fde193' }\r\n  // GET request to get data\r\n  const res = await fetch(`https://dummyapi.io/data/v1/post?limit=10&page=${page}`, { headers } );\r\n    return res.json();\r\n}\r\n\r\n\r\nconst Animals = () => {\r\n\r\n  \r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n  const [ totalPage, setTotalPage ] = useState(1);\r\n  const [ pages, setPages ] = useState([]);\r\n\r\n\r\n  \r\n  const { \r\n    resolvedData, \r\n    latestData, \r\n    status \r\n  } = usePaginatedQuery(['animals', currentPage], fetchAnimals);\r\n\r\n\r\n\r\n\r\n  \r\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(10);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n\r\n\r\n\r\n  const handleClick = () => {\r\n     let newPage = currentPage + 1;\r\n     setCurrentPage(newPage);\r\n  };\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={() => handleClick()}\r\n          className={currentPage == number ? \"active\" : null}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n\r\n\r\n    useEffect(() => {\r\nlet arr = [];\r\n      if(latestData !== undefined){\r\n       \r\n          let noOfPages = Math.ceil(latestData.total/latestData.limit);\r\n        setTotalPage(noOfPages);\r\n        setmaxPageNumberLimit(latestData.limit)\r\n        for (let i = 1; i <= noOfPages; i++) {\r\n          arr.push(i);\r\n        }\r\n\r\n        setPages(arr)\r\n      }\r\n     \r\n    }, [latestData]);\r\n\r\n  let handleNext = () => {\r\n    let newPage = currentPage + 1;\r\n    setCurrentPage(newPage);\r\n    // setPage(old => (!latestData || !latestData.next ? old : old + 1));\r\n  }\r\n  return (\r\n    <div>\r\n    \r\n\r\n      {status === 'loading' && (\r\n        <div>Loading data</div>\r\n      )}\r\n\r\n      {status === 'error' && (\r\n        <div>Error fetching data</div>\r\n      )}\r\n\r\n      {status === 'success' && (\r\n        <>\r\n      \r\n          <div className=\"bg-gray-100\">\r\n            <h2>Animals</h2>\r\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"max-w-2xl mx-auto py-16 sm:py-24 lg:py-32 lg:max-w-none\">\r\n                  <h2 className=\"text-2xl font-extrabold text-gray-900\">Collections</h2>\r\n                  <div className=\"mt-6 space-y-12 lg:space-y-0 lg:grid lg:grid-cols-3 lg:gap-x-6\">\r\n                      {/* { resolvedData.data.map(animal => <Animal key={animal} animal={animal} /> ) } */}\r\n                      { resolvedData.data.map(animal => <span key={animal.id}>{animal.owner.firstName}</span> ) }\r\n\r\n                  </div>\r\n                  <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded' \r\n            onClick={() => setCurrentPage(old => Math.max(old - 1, 1))} \r\n            disabled={currentPage === 1}>\r\n            Previous Page\r\n          </button>\r\n          <span>{ renderPageNumbers }</span>\r\n          <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'\r\n            onClick={() => handleNext()} \r\n           disabled={totalPage === currentPage}\r\n            >\r\n            Next page\r\n          </button>\r\n                </div>\r\n              </div>\r\n            </div>          \r\n        </>\r\n      )} \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Animals;"],"mappings":"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"},"metadata":{},"sourceType":"module"}